{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/acount/acount.component.html","webpack:///./src/app/acount/acount.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/services/login.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div> \\r\\n  <br />\\r\\n  <span>UserName: </span> <span>{{user.userName}}</span>\\r\\n  <br />\\r\\n  <span>Email: </span><span>{{user.email}}</span>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../services/login.service';\r\nimport { UserInfo } from '../model/UserInfo';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'acount.component.html'\r\n})\r\nexport class AcountComponent implements OnInit {\r\n  user: UserInfo;\r\n  constructor(private loginService: LoginService) { }\r\n  ngOnInit() {\r\n    this.getLoginAcount();\r\n  }\r\n  getLoginAcount(): void {\r\n    this.loginService.getLoginUser('admin').subscribe(res => {\r\n      this.user = res;\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AcountComponent } from './acount/acount.component';\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'acount', component: AcountComponent }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'well com to my app';\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { AcountComponent } from './acount/acount.component';\n\nimport { LoginService } from './services/login.service';\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  declarations: [\n    AppComponent,    \n    LoginComponent,\n    AcountComponent\n  ],  \n  providers: [LoginService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <form>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"userName\\\" class=\\\"col-sm-2 col-form-label\\\">UserName</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                    <input #userName type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"user name\\\" />\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n        </form>\\r\\n        \\r\\n        <input #passWord type=\\\"password\\\" placeholder=\\\"pass word\\\" />\\r\\n        <input type=\\\"button\\\" value=\\\"Login\\\" (click)=\\\"login(userName.value, passWord.value)\\\" />\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../services/login.service';\r\nimport { Route } from '@angular/compiler/src/core';\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: 'login.component.html'\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  test: string;\r\n  constructor(private loginService: LoginService, private router: Router) { }\r\n  ngOnInit() { }\r\n  login(username: string, password: string): void {\r\n    this.loginService.login(username, password).subscribe(res => {      \r\n      if (res != null && res.token != \"\") {\r\n        localStorage.setItem('token', res.token);\r\n        this.router.navigate(['/acount'])\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { HttpRequest } from 'selenium-webdriver/http';\r\nimport { UserInfo } from '../model/UserInfo'\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n@Injectable()\r\nexport class LoginService {\r\n  private loginUrl = 'api/token';\r\n  private acountUrl = \"api/acount\";\r\n  constructor(private http: HttpClient) { }\r\n  login(username: string, password: string): Observable<any> {\r\n    let params = new HttpParams();\r\n    params = params.append('userName', username);\r\n    params = params.append('passWord', password);\r\n    return this.http.post(this.loginUrl, null, { headers: new HttpHeaders({ 'Content-Type': 'application/json' }), params: params }).pipe();\r\n  }\r\n\r\n  getLoginUser(userName: string): Observable<any> {\r\n    const url = `${this.acountUrl}/${userName}`;\r\n    let token = \"Bearer \" + localStorage.getItem(\"token\");\r\n    let requestHeaders = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'Authorization': token\r\n    });\r\n    return this.http.get<UserInfo>(url, { headers: requestHeaders }).pipe();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}